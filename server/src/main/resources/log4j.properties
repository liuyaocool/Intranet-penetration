
#######输出格式解释#######
# %d: 日志打印的时间点，默认格式为ISO8601，也可以另外指定格式，
##  如：%d{yyy年MM月dd日 HH时mm分ss秒SSS}，则会输出：2018年01月06日 14时47分45秒590
# %p: 输出日志级别，DEBUG < INFO < WARN < ERROR < FATAL
# %-5p：表示字符小于5位，则字符居左（不加“-”号则字符居右），你可以举一反三
# %c: 日志所在类的全名
# %M: 日志所在方法的名字
# %m: 日志信息
# %n: 输出一个回车换行符
# %L: 输出代码中的行号

#所有日志 级别,name1,name2...
log4j.rootLogger=info,stdout,file

log4j.logger.org.apache.ibatis=warn

# Druid
#log4j.logger.druid.sql=DEBUG
#log4j.logger.druid.sql.DataSource=warn
#log4j.logger.druid.sql.Connection=warn
#log4j.logger.druid.sql.Statement=DEBUG
#log4j.logger.druid.sql.ResultSet=warn
#设置包名的输出级别


#log4j.logger.cn.wdq=DEBUG,wdq

#控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.Threshold=info
log4j.appender.stdout.layout=org.apache.log4j.EnhancedPatternLayout
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# %-d{yyyy-MM-dd HH:mm:ss}[ %p ]%m%n
# %d %-5p [%c.%M()] - %m%n
log4j.appender.stdout.layout.ConversionPattern=%-d{MM-dd HH:mm:ss} [%p] [%-30.30c{1.}]  -- %m%n

#所有文件输出
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.File=${webApp.root}/wdq_logs/allDEBUG.log
log4j.appender.file.Encoding=UTF-8
log4j.appender.file.name=fileLogDemo
log4j.appender.file.Threshold=DEBUG
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}[ %p ]%m%n
log4j.appender.file.append=true

#wdq下所有包的文件输出
#log4j.appender.wdq=org.apache.log4j.FileAppender
#log4j.appender.wdq.File=${webApp.root}/wdq_logs/package_wdq.log
#log4j.appender.wdq.Encoding=UTF-8
#log4j.appender.wdq.name=fileLogDemo
#log4j.appender.wdq.Threshold=DEBUG
#log4j.appender.wdq.layout=org.apache.log4j.PatternLayout
#log4j.appender.wdq.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}[ %p ]%m%n
#log4j.appender.wdq.append=true
